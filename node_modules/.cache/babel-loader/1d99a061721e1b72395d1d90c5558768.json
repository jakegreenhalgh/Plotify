{"ast":null,"code":"var _jsxFileName = \"/Users/jake/codeclan_work/capstone_project/spotify-react/src/MapChart.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ComposableMap, Geographies, Geography, ZoomableGroup } from \"react-simple-maps\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst geoUrl = \"https://raw.githubusercontent.com/deldersveld/topojson/master/world-countries.json\";\n\nfunction MapChart() {\n  _s();\n\n  const [clickedCountry, setClickedCountry] = useState(\"\");\n\n  const handleClick = geo => {\n    setClickedCountry(geo.properties.name);\n    dispatcher(getState({\n      value: geo.properties.name\n    }));\n    history.push({\n      pathname: \"/issues\",\n      state: {\n        states: geo.properties.name\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ComposableMap, {\n      children: /*#__PURE__*/_jsxDEV(Geographies, {\n        geography: geoUrl,\n        children: _ref => {\n          let {\n            geographies\n          } = _ref;\n          return geographies.map(geo => /*#__PURE__*/_jsxDEV(Geography, {\n            geography: geo,\n            style: {\n              default: {\n                fill: \"#ffffff\",\n                outline: 'none'\n              },\n              hover: {\n                fill: \"#1ed760\",\n                outline: 'none'\n              },\n              pressed: {\n                fill: \"#1db954\",\n                outline: 'none'\n              }\n            }\n          }, geo.rsmKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(MapChart, \"OAhPLxsSwn7RP5bGS3h2jta4bzo=\");\n\n_c = MapChart;\nexport default MapChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapChart\");","map":{"version":3,"names":["React","ComposableMap","Geographies","Geography","ZoomableGroup","useState","geoUrl","MapChart","clickedCountry","setClickedCountry","handleClick","geo","properties","name","dispatcher","getState","value","history","push","pathname","state","states","geographies","map","default","fill","outline","hover","pressed","rsmKey"],"sources":["/Users/jake/codeclan_work/capstone_project/spotify-react/src/MapChart.js"],"sourcesContent":["import React from \"react\"\nimport { ComposableMap, Geographies, Geography, ZoomableGroup } from \"react-simple-maps\"\nimport { useState } from \"react\";\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/deldersveld/topojson/master/world-countries.json\"\n\nfunction MapChart() {\n\n    const [clickedCountry, setClickedCountry] = useState(\"\");\n    const handleClick = (geo) => {\n        setClickedCountry(geo.properties.name);\n        dispatcher(getState({ value: geo.properties.name }));\n        history.push({\n        pathname: \"/issues\",\n        state: { states: geo.properties.name },\n        });\n    };\n    \n  return (\n    <>\n    <ComposableMap>\n      <Geographies geography={geoUrl}>\n        {({ geographies }) =>\n          geographies.map((geo) => (\n            <Geography \n            key={geo.rsmKey}\n            geography={geo}\n            style={{\n                default: {\n                  fill: \"#ffffff\",\n                  outline: 'none'\n                },\n                hover: {\n                  fill: \"#1ed760\",\n                  outline: 'none'\n                },\n                pressed: {\n                  fill: \"#1db954\",\n                  outline: 'none'\n                },\n              }}\n    />\n          ))\n        }\n      </Geographies>\n    </ComposableMap>\n    </>\n  )\n}\n\nexport default MapChart;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,aAAhD,QAAqE,mBAArE;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,MAAM,GACV,oFADF;;AAGA,SAASC,QAAT,GAAoB;EAAA;;EAEhB,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCJ,QAAQ,CAAC,EAAD,CAApD;;EACA,MAAMK,WAAW,GAAIC,GAAD,IAAS;IACzBF,iBAAiB,CAACE,GAAG,CAACC,UAAJ,CAAeC,IAAhB,CAAjB;IACAC,UAAU,CAACC,QAAQ,CAAC;MAAEC,KAAK,EAAEL,GAAG,CAACC,UAAJ,CAAeC;IAAxB,CAAD,CAAT,CAAV;IACAI,OAAO,CAACC,IAAR,CAAa;MACbC,QAAQ,EAAE,SADG;MAEbC,KAAK,EAAE;QAAEC,MAAM,EAAEV,GAAG,CAACC,UAAJ,CAAeC;MAAzB;IAFM,CAAb;EAIH,CAPD;;EASF,oBACE;IAAA,uBACA,QAAC,aAAD;MAAA,uBACE,QAAC,WAAD;QAAa,SAAS,EAAEP,MAAxB;QAAA,UACG;UAAA,IAAC;YAAEgB;UAAF,CAAD;UAAA,OACCA,WAAW,CAACC,GAAZ,CAAiBZ,GAAD,iBACd,QAAC,SAAD;YAEA,SAAS,EAAEA,GAFX;YAGA,KAAK,EAAE;cACHa,OAAO,EAAE;gBACPC,IAAI,EAAE,SADC;gBAEPC,OAAO,EAAE;cAFF,CADN;cAKHC,KAAK,EAAE;gBACLF,IAAI,EAAE,SADD;gBAELC,OAAO,EAAE;cAFJ,CALJ;cASHE,OAAO,EAAE;gBACPH,IAAI,EAAE,SADC;gBAEPC,OAAO,EAAE;cAFF;YATN;UAHP,GACKf,GAAG,CAACkB,MADT;YAAA;YAAA;YAAA;UAAA,QADF,CADD;QAAA;MADH;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADA,iBADF;AA8BD;;GA1CQtB,Q;;KAAAA,Q;AA4CT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}