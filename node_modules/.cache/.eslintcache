[{"/Users/jake/codeclan_work/capstone_project/spotify-react/src/index.js":"1","/Users/jake/codeclan_work/capstone_project/spotify-react/src/containers/MapContainer.js":"2","/Users/jake/codeclan_work/capstone_project/spotify-react/src/mapcomponents/MapChart.js":"3","/Users/jake/codeclan_work/capstone_project/spotify-react/src/mapcomponents/Top10.js":"4","/Users/jake/codeclan_work/capstone_project/spotify-react/src/mapcomponents/Top10item.js":"5","/Users/jake/codeclan_work/capstone_project/spotify-react/src/playercomponents/Player.js":"6","/Users/jake/codeclan_work/capstone_project/spotify-react/src/App.js":"7","/Users/jake/codeclan_work/capstone_project/spotify-react/src/reportWebVitals.js":"8"},{"size":535,"mtime":1663856466390,"results":"9","hashOfConfig":"10"},{"size":185,"mtime":1664102884852,"results":"11","hashOfConfig":"10"},{"size":2070,"mtime":1664102884852,"results":"12","hashOfConfig":"10"},{"size":520,"mtime":1664102884852,"results":"13","hashOfConfig":"10"},{"size":294,"mtime":1664102884852,"results":"14","hashOfConfig":"10"},{"size":98,"mtime":1664146182537,"results":"15","hashOfConfig":"10"},{"size":1506,"mtime":1664144899464,"results":"16","hashOfConfig":"10"},{"size":362,"mtime":1664146122585,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"3em50o",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jake/codeclan_work/capstone_project/spotify-react/src/index.js",[],[],[],"/Users/jake/codeclan_work/capstone_project/spotify-react/src/containers/MapContainer.js",[],[],"/Users/jake/codeclan_work/capstone_project/spotify-react/src/mapcomponents/MapChart.js",["44"],[],"import React from \"react\"\nimport { ComposableMap, Geographies, Geography, ZoomableGroup } from \"react-simple-maps\"\nimport { useState, useEffect } from \"react\";\nimport Top10 from \"./Top10\";\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/deldersveld/topojson/master/world-countries.json\"\n\nfunction MapChart() {\n\n  const [clickedCountry, setClickedCountry] = useState(\"\");\n  const [playlist, setPlaylist] = useState([]);\n\n  const playlistId = '37i9dQZEVXbKM896FDX8L1'\n  const accessToken = 'BQA2XEfGUurg5GTHYMwxuQlJQ_wS0h0jvwTUMxicPHJG5_olPoLgRE5X1vpuYve_PViAi0xQmvaj7P9bm5-tbvUEqX1QVyt6cwKjzAv0SC_S8O1_2RlB3IhBaUmosywrlQL-f81Vj7N-EYYL_x5IfqPpxssAqVsbNAdUHhrg207SfHM'\n\n    useEffect (() => {\n      fetch(`https://api.spotify.com/v1/playlists/${playlistId}`, {\n            method: 'GET', headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + accessToken\n            }\n        })\n            .then(res => res.json())\n            .then(top10 => setPlaylist(top10.tracks.items.slice(0, 10)))\n    }, [])\n\n\n\n    const handleClick = (geo) => {\n        setClickedCountry(geo.properties.name);}\n    \n  return (\n    <>\n    <ComposableMap>\n      <Geographies geography={geoUrl}>\n        {({ geographies }) =>\n          geographies.map((geo) => (\n            <Geography \n            key={geo.rsmKey}\n            geography={geo}\n            onClick={() => handleClick(geo)}\n            style={{\n                default: {\n                  fill: \"#ffffff\",\n                  outline: 'none'\n                },\n                hover: {\n                  fill: \"#1ed760\",\n                  outline: 'none'\n                },\n                pressed: {\n                  fill: \"#1db954\",\n                  outline: 'none'\n                },\n              }}\n    />\n          ))\n        }\n      </Geographies>\n    </ComposableMap>\n    <div>{clickedCountry}</div>\n    {clickedCountry ? \n    <Top10 playlist={playlist}/>\n    :\n    null\n    }\n    \n    </>\n  )\n}\n\nexport default MapChart;","/Users/jake/codeclan_work/capstone_project/spotify-react/src/mapcomponents/Top10.js",[],[],"/Users/jake/codeclan_work/capstone_project/spotify-react/src/mapcomponents/Top10item.js",[],[],"/Users/jake/codeclan_work/capstone_project/spotify-react/src/playercomponents/Player.js",[],[],"/Users/jake/codeclan_work/capstone_project/spotify-react/src/App.js",[],[],"/Users/jake/codeclan_work/capstone_project/spotify-react/src/reportWebVitals.js",[],[],{"ruleId":"45","severity":1,"message":"46","line":2,"column":49,"nodeType":"47","messageId":"48","endLine":2,"endColumn":62},"no-unused-vars","'ZoomableGroup' is defined but never used.","Identifier","unusedVar"]